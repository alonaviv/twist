version: '3.8'
services:
  db:
    build:
      context: .
      dockerfile: docker/common/Dockerfile.db
    platform: linux/amd64
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U twistdbadmin"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  redis:
    image: redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    restart: always
    build:
      context: .
      dockerfile: docker/dev/Dockerfile.celery
    command: celery -A twist worker -l INFO
    volumes:
      - .:/twist
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy

  django:
    restart: always
    build:
      context: .
      dockerfile: docker/dev/Dockerfile.django
    command: sh -c "./dev_setup.py && npm run sass & ./manage.py livereload --host=0.0.0.0 & ./manage.py runserver 0.0.0.0:8000 && tail -f /dev/null" # Keep container running
    ports:
      - "8000:8000"
      - "35729:35729"
    volumes:
      - .:/twist
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  db: {}
